<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hcm.grw.model.mapper.schedule.ScheduleDaoImpl">

	<!-- 임직원 휴가일수 리셋처리 -->
	<insert id="registEmployeeHoliday">
		<![CDATA[
		INSERT INTO EMP_HOLIDAY(EMHO_YEAR, EMPL_ID, EMHO_HOLIDAY)
		SELECT
		TO_CHAR(CURRENT_DATE, 'YYYY'),
		A.EMPL_ID,
		A.HOLIDAY
		FROM (
		SELECT
		T.EMPL_ID,
		T.EMPL_NAME,
		T.EMPL_JOINDATE,
		T.YEAR_DIFFERENCE,
		CASE WHEN T.YEAR_DIFFERENCE < 1 THEN 0
		WHEN T.YEAR_DIFFERENCE >= 1 THEN
		CASE WHEN 15+((T.YEAR_DIFFERENCE-1)/2) > 20 THEN 20
		ELSE 15+TRUNC((T.YEAR_DIFFERENCE-1)/2)
		END
		END AS HOLIDAY
		FROM (
		SELECT
		A.EMPL_ID,
		A.EMPL_NAME,
		A.EMPL_JOINDATE,
		TRUNC(MONTHS_BETWEEN(TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD'), TO_DATE(A.EMPL_JOINDATE, 'YYYY-MM-DD')) / 12) AS YEAR_DIFFERENCE
		FROM EMPLOYEE A
		WHERE EMPL_DELFLAG ='N'
		) T
		WHERE T.YEAR_DIFFERENCE > 0
		) A
		LEFT OUTER JOIN EMP_HOLIDAY B ON A.EMPL_ID = B.EMPL_ID AND B.EMHO_YEAR = TO_CHAR(CURRENT_DATE , 'YYYY')
		WHERE B.EMPL_ID IS NULL
		AND A.HOLIDAY > 0
		]]>
	</insert>
	

	<!-- 특일정보 입력 -->
	<insert id="registSpecialDay" parameterType="Map">
		MERGE INTO HOLIDAY H
		USING (SELECT #{holi_date} HOLI_DATE FROM DUAL) S
		ON (H.HOLI_DATE = S.HOLI_DATE)
		WHEN MATCHED THEN
			UPDATE SET
		    	HOLI_NAME = #{holi_name},
		    	HOLI_FLAG = #{holi_flag},
		    	HOLI_MODIFY_ID = 'SYSTEM',
		    	HOLI_MODIFY_DT = CURRENT_DATE
		WHEN NOT MATCHED THEN
			INSERT (HOLI_DATE, HOLI_NAME, HOLI_FLAG, HOLI_CREATE_ID)
			VALUES (#{holi_date}, #{holi_name}, #{holi_flag}, 'SYSTEM')
	</insert>

	<!-- 일반 평/휴일 정보 입력 -->
	<insert id="registNomalDay">
		MERGE INTO HOLIDAY H
		USING (SELECT HOLI_DATE, HOLI_NAME, HOLI_FLAG FROM VW_NOMAL_HOLIDAY) S
		ON (H.HOLI_DATE = S.HOLI_DATE)
		WHEN MATCHED THEN
			UPDATE SET
		    	HOLI_NAME = S.HOLI_NAME,
		    	HOLI_FLAG = S.HOLI_FLAG,
		    	HOLI_MODIFY_ID = 'SYSTEM',
		    	HOLI_MODIFY_DT = CURRENT_DATE
		WHEN NOT MATCHED THEN
			INSERT (HOLI_DATE, HOLI_NAME, HOLI_FLAG, HOLI_CREATE_ID)
			VALUES (S.HOLI_DATE, S.HOLI_NAME, S.HOLI_FLAG, 'SYSTEM')
	</insert>
	
		
	<!-- 인사발령적용 스케쥴 -->
	<update id="updateOrderSchedule">
		UPDATE EMPLOYEE E	SET 
			(E.EMPL_DEPT_CD, E.EMPL_RANK_CD, E.EMPL_POSITION_CD, E.EMPL_MODIFY_ID, E.EMPL_MODIFY_DT) = (
			    SELECT 
			        NVL(B.EMOD_ORDER_DEPT, B.EMOD_PREV_DEPT) AS ORDER_DEPT,
			        NVL(B.EMOD_ORDER_RANK, B.EMOD_PREV_RANK) AS ORDER_RANK,
			        NVL(B.EMOD_ORDER_POSITION, B.EMOD_PREV_POSITION) AS ORDER_POSITION,
			        'ORSYSTEM',
			        CURRENT_DATE
			    FROM EMP_ORDER A
			    INNER JOIN EMP_ORDER_DETAIL B ON A.EMOR_ID = B.EMOR_ID
			    WHERE A.EMOR_STATUS = 'Y'
			    AND TO_CHAR(TO_DATE(B.EMOD_ORDER_DT, 'YYYY-MM-DD'), 'YYYY-MM-DD') = TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD')
			    AND E.EMPL_ID = B.EMPL_ID
			) 
		WHERE EXISTS (
		    SELECT 1
		    FROM EMP_ORDER A
		    INNER JOIN EMP_ORDER_DETAIL B ON A.EMOR_ID = B.EMOR_ID
		    WHERE A.EMOR_STATUS = 'Y'
		    AND TO_CHAR(TO_DATE(B.EMOD_ORDER_DT, 'YYYY-MM-DD'), 'YYYY-MM-DD') = TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD')
		    AND E.EMPL_ID = B.EMPL_ID
		)
	</update>

</mapper>
