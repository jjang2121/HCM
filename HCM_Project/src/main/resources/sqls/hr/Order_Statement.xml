<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hcm.grw.model.mapper.hr.OrderDaoImpl">

	<!-- 리스트 조회(임직원) -->
	<select id="getOrderList" parameterType="String" resultType="OrderInfoListDto">
		SELECT
		A.EMOR_ID,
		C.EMPL_ID,
		C.EMPL_NAME,
		B.EMOD_ORDER_DT,
		B.EMOD_TYPE,
		J.COCO_NAME AS EMOD_TYPE_NM,
		B.EMOD_PREV_DEPT,
		D.COCO_NAME AS EMOD_PREV_DEPT_NM,
		B.EMOD_ORDER_DEPT,
		E.COCO_NAME AS EMOD_ORDER_DEPT_NM,
		B.EMOD_PREV_RANK,
		F.COCO_NAME AS EMOD_PREV_RANK_NM,
		B.EMOD_ORDER_RANK,
		G.COCO_NAME AS EMOD_ORDER_RANK_NM,
		B.EMOD_PREV_POSITION,
		H.COCO_NAME AS EMOD_PREV_POSITION_NM,
		B.EMOD_ORDER_POSITION,
		I.COCO_NAME AS EMOD_ORDER_POSITION_NM
		FROM EMP_ORDER A
		INNER JOIN EMP_ORDER_DETAIL B ON A.EMOR_ID = B.EMOR_ID
		INNER JOIN EMPLOYEE C ON B.EMPL_ID = C.EMPL_ID
		LEFT OUTER JOIN COMMON_CODE D ON B.EMOD_PREV_DEPT = D.COCO_CD
		LEFT OUTER JOIN COMMON_CODE E ON B.EMOD_ORDER_DEPT = E.COCO_CD
		LEFT OUTER JOIN COMMON_CODE F ON B.EMOD_PREV_RANK = F.COCO_CD
		LEFT OUTER JOIN COMMON_CODE G ON B.EMOD_ORDER_RANK = G.COCO_CD
		LEFT OUTER JOIN COMMON_CODE H ON B.EMOD_PREV_POSITION = H.COCO_CD
		LEFT OUTER JOIN COMMON_CODE I ON B.EMOD_ORDER_POSITION = I.COCO_CD
		LEFT OUTER JOIN COMMON_CODE J ON B.EMOD_TYPE = J.COCO_CD
		WHERE EMOR_STATUS = 'Y'
		AND C.EMPL_ID = #{empl_id}
		ORDER BY A.EMOR_ID DESC, B.EMOD_SEQ ASC
	</select>

	<!-- 리스트 조회(관리자) -->
	<select id="getOrderAdminList" resultType="OrderInfoListDto">
		SELECT
		A.EMOR_ID,
		A.EMOR_STATUS,
		C.EMPL_ID,
		C.EMPL_NAME,
		B.EMOD_SEQ,
		B.EMOD_ORDER_DT,
		B.EMOD_TYPE,
		J.COCO_NAME AS EMOD_TYPE_NM,
		B.EMOD_PREV_DEPT,
		D.COCO_NAME AS EMOD_PREV_DEPT_NM,
		B.EMOD_ORDER_DEPT,
		E.COCO_NAME AS EMOD_ORDER_DEPT_NM,
		B.EMOD_PREV_RANK,
		F.COCO_NAME AS EMOD_PREV_RANK_NM,
		B.EMOD_ORDER_RANK,
		G.COCO_NAME AS EMOD_ORDER_RANK_NM,
		B.EMOD_PREV_POSITION,
		H.COCO_NAME AS EMOD_PREV_POSITION_NM,
		B.EMOD_ORDER_POSITION,
		I.COCO_NAME AS EMOD_ORDER_POSITION_NM
		FROM EMP_ORDER A
		INNER JOIN EMP_ORDER_DETAIL B ON A.EMOR_ID = B.EMOR_ID
		INNER JOIN EMPLOYEE C ON B.EMPL_ID = C.EMPL_ID
		LEFT OUTER JOIN COMMON_CODE D ON B.EMOD_PREV_DEPT = D.COCO_CD
		LEFT OUTER JOIN COMMON_CODE E ON B.EMOD_ORDER_DEPT = E.COCO_CD
		LEFT OUTER JOIN COMMON_CODE F ON B.EMOD_PREV_RANK = F.COCO_CD
		LEFT OUTER JOIN COMMON_CODE G ON B.EMOD_ORDER_RANK = G.COCO_CD
		LEFT OUTER JOIN COMMON_CODE H ON B.EMOD_PREV_POSITION = H.COCO_CD
		LEFT OUTER JOIN COMMON_CODE I ON B.EMOD_ORDER_POSITION = I.COCO_CD
		LEFT OUTER JOIN COMMON_CODE J ON B.EMOD_TYPE = J.COCO_CD
		WHERE EMOR_STATUS != 'D'
		<if test="sdate != null and sdate != ''">
		<![CDATA[
		AND B.EMOD_ORDER_DT >= #{sdate}
		]]>
		</if>
		<if test="edate != null and edate != ''">
		<![CDATA[
		AND B.EMOD_ORDER_DT <= #{edate}
		]]>
		</if>
		<if test="keyWord != null and keyWord != ''">
		AND ${searchType} LIKE CONCAT(#{keyWord}, '%')
		</if>
		<if test="empl_delflag != null and empl_delflag != ''">
		AND C.EMPL_DELFLAG = #{empl_delflag}
		</if>
		
		<if test="empl_dept_cd != null and empl_dept_cd != ''">
		    AND C.EMPL_DEPT_CD IN 
		    <foreach collection="empl_dept_cd" item="dcode" open="(" separator="," close=")">
		        #{dcode}
		    </foreach>
		</if>
		<if test="empl_rank_cd != null and empl_rank_cd != ''">
			AND C.EMPL_RANK_CD IN
			<foreach collection="empl_rank_cd" item="rcode" open="(" separator="," close=")">
				#{rcode}
			</foreach>
		</if>
		<if test="empl_position_cd != null and empl_position_cd != ''">
			AND C.EMPL_POSITION_CD IN
			<foreach collection="empl_position_cd" item="pcode" open="(" separator="," close=")">
				#{pcode}
			</foreach>
		</if>				
		ORDER BY A.EMOR_ID DESC, B.EMOD_SEQ ASC
	</select>

	<!-- 발령 상세 리스트 조회(관리자) -->
	<select id="selectOrderAdminDetail" parameterType="String" resultType="OrderInfoListDto">
		SELECT
		A.EMOR_ID,
		A.EMOR_STATUS,
		C.EMPL_ID,
		C.EMPL_NAME,
		B.EMOD_SEQ,
		B.EMOD_ORDER_DT,
		B.EMOD_TYPE,
		J.COCO_NAME AS EMOD_TYPE_NM,
		B.EMOD_PREV_DEPT,
		D.COCO_NAME AS EMOD_PREV_DEPT_NM,
		B.EMOD_ORDER_DEPT,
		E.COCO_NAME AS EMOD_ORDER_DEPT_NM,
		B.EMOD_PREV_RANK,
		F.COCO_NAME AS EMOD_PREV_RANK_NM,
		B.EMOD_ORDER_RANK,
		G.COCO_NAME AS EMOD_ORDER_RANK_NM,
		B.EMOD_PREV_POSITION,
		H.COCO_NAME AS EMOD_PREV_POSITION_NM,
		B.EMOD_ORDER_POSITION,
		I.COCO_NAME AS EMOD_ORDER_POSITION_NM
		FROM EMP_ORDER A
		INNER JOIN EMP_ORDER_DETAIL B ON A.EMOR_ID = B.EMOR_ID
		INNER JOIN EMPLOYEE C ON B.EMPL_ID = C.EMPL_ID
		LEFT OUTER JOIN COMMON_CODE D ON B.EMOD_PREV_DEPT = D.COCO_CD
		LEFT OUTER JOIN COMMON_CODE E ON B.EMOD_ORDER_DEPT = E.COCO_CD
		LEFT OUTER JOIN COMMON_CODE F ON B.EMOD_PREV_RANK = F.COCO_CD
		LEFT OUTER JOIN COMMON_CODE G ON B.EMOD_ORDER_RANK = G.COCO_CD
		LEFT OUTER JOIN COMMON_CODE H ON B.EMOD_PREV_POSITION = H.COCO_CD
		LEFT OUTER JOIN COMMON_CODE I ON B.EMOD_ORDER_POSITION = I.COCO_CD
		LEFT OUTER JOIN COMMON_CODE J ON B.EMOD_TYPE = J.COCO_CD
		WHERE EMOR_STATUS != 'D'
		AND A.EMOR_ID = #{emor_id}
		ORDER BY B.EMOD_SEQ ASC
	</select>

	<!-- 발령정보 등록_마스터 -->
	<insert id="registOrderAdminMaster" parameterType="OrderInfoAdminDto">
		<selectKey keyProperty="emor_id" resultType="String" order="BEFORE">
			SELECT 'O'||TO_CHAR(NVL(MAX(REPLACE(EMOR_ID,'O','')), TO_CHAR(CURRENT_DATE, 'YYYY')||'000')+1)
			FROM EMP_ORDER
			WHERE SUBSTR(EMOR_ID, 2, 4) = TO_CHAR(CURRENT_DATE, 'YYYY')
		</selectKey>

		INSERT INTO EMP_ORDER (EMOR_ID, EMOR_STATUS, EMOR_CREATE_ID)
		VALUES (#{emor_id}, 'N', #{emor_create_id})
	</insert>


	<!-- 발령정보 등록_상세 -->
	<insert id="registOrderAdminDetail" parameterType="OrderInfoDetailDto">
		<selectKey keyProperty="emod_seq" resultType="Integer" order="BEFORE">
			SELECT NVL(MAX(EMOD_SEQ),0)+1 FROM EMP_ORDER_DETAIL WHERE EMOR_ID=#{emor_id}
		</selectKey>
		INSERT INTO EMP_ORDER_DETAIL (
		EMOR_ID, EMOD_SEQ, EMPL_ID, EMOD_ORDER_DT, EMOD_TYPE,
		EMOD_PREV_DEPT, EMOD_ORDER_DEPT,
		EMOD_PREV_RANK, EMOD_ORDER_RANK,
		EMOD_PREV_POSITION, EMOD_ORDER_POSITION, EMOD_CREATE_ID
		)
		VALUES (
		#{emor_id}, #{emod_seq}, #{empl_id}, #{emod_order_dt}, #{emod_type},
		#{emod_prev_dept, jdbcType=CHAR}, #{emod_order_dept, jdbcType=CHAR},
		#{emod_prev_rank, jdbcType=CHAR}, #{emod_order_rank, jdbcType=CHAR},
		#{emod_prev_position, jdbcType=CHAR}, #{emod_order_position, jdbcType=CHAR}, #{emod_create_id}
		)
	</insert>

	<!-- 발령정보 삭제 -->
	<delete id="deleteOrderAdmin" parameterType="OrderInfoDetailDto">
		DELETE FROM EMP_ORDER
		WHERE EMOR_ID = #{emor_id}
	</delete>

	<!-- 발령정보 상세삭제 -->
	<delete id="deleteOrderAdminDetail" parameterType="OrderInfoDetailDto">
		DELETE FROM EMP_ORDER_DETAIL
		WHERE EMOR_ID = #{emor_id}
		<if test="emod_seq != null and emod_seq != '' and emod_seq != '0'">
		AND EMOD_SEQ = #{emod_seq}
		</if>
	</delete>


	<!-- 발령정보 수정처리 -->
	<update id="updateOrderAdminDetail" parameterType="OrderInfoDetailDto">
		UPDATE EMP_ORDER_DETAIL SET
		EMOD_ORDER_DT = #{emod_order_dt},
		EMOD_ORDER_DEPT = #{emod_order_dept, jdbcType=CHAR},
		EMOD_ORDER_RANK = #{emod_order_rank, jdbcType=CHAR},
		EMOD_ORDER_POSITION = #{emod_order_position, jdbcType=CHAR},
		EMOD_MODIFY_ID = #{emod_modify_id},
		EMOD_MODIFY_DT = CURRENT_DATE
		WHERE EMOR_ID = #{emor_id}
		AND EMOD_SEQ = #{emod_seq}
	</update>

	<!-- 발령정보 확정처리 -->
	<update id="confirmOrderAdmin" parameterType="OrderInfoAdminDto">
		UPDATE EMP_ORDER SET
		EMOR_STATUS = 'Y',
		EMOR_MODIFY_ID = #{emor_modify_id},
		EMOR_MODIFY_DT = CURRENT_DATE
		WHERE EMOR_ID = #{emor_id}
	</update>
	
	<update id="updateOrderSchedule">
		UPDATE EMPLOYEE E	SET 
			(E.EMPL_DEPT_CD, E.EMPL_RANK_CD, E.EMPL_POSITION_CD, E.EMPL_MODIFY_ID, E.EMPL_MODIFY_DT) = (
			    SELECT 
			        NVL(B.EMOD_ORDER_DEPT, B.EMOD_PREV_DEPT) AS ORDER_DEPT,
			        NVL(B.EMOD_ORDER_RANK, B.EMOD_PREV_RANK) AS ORDER_RANK,
			        NVL(B.EMOD_ORDER_POSITION, B.EMOD_PREV_POSITION) AS ORDER_POSITION,
			        'ORSYSTEM',
			        CURRENT_DATE
			    FROM EMP_ORDER A
			    INNER JOIN EMP_ORDER_DETAIL B ON A.EMOR_ID = B.EMOR_ID
			    WHERE A.EMOR_STATUS = 'Y'
			    AND TO_CHAR(TO_DATE(B.EMOD_ORDER_DT, 'YYYY-MM-DD')-1, 'YYYY-MM-DD') = TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD')
			    AND E.EMPL_ID = B.EMPL_ID
			) 
		WHERE EXISTS (
		    SELECT 1
		    FROM EMP_ORDER A
		    INNER JOIN EMP_ORDER_DETAIL B ON A.EMOR_ID = B.EMOR_ID
		    WHERE A.EMOR_STATUS = 'Y'
		    AND TO_CHAR(TO_DATE(B.EMOD_ORDER_DT, 'YYYY-MM-DD')-1, 'YYYY-MM-DD') = TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD')
		    AND E.EMPL_ID = B.EMPL_ID
		)
	</update>

</mapper>
