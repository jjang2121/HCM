<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hcm.grw.model.mapper.hr.HolidayDaoImpl">

	<!-- 휴가정보 조회 -->
	<select id="holidayList" parameterType="Map" resultType="HolidayDto">
		<![CDATA[
		SELECT
		SUBSTR(C.SIDT_TEMP_NAME, 0, 2) AS SIDT_TEMP_NAME,
		A.SIDB_DOC_BE,
		A.SIDB_DOC_END,
		TO_CHAR(A.SIDB_DOC_BE, 'YYYY-MM-DD')||' ~ '||TO_CHAR(A.SIDB_DOC_END, 'YYYY-MM-DD') AS SIDB_DOC_DATE,
		A.SIDB_DOC_APPRDT, -- 최종승인일
		(
			SELECT 
					COUNT(*)
			FROM	(
				SELECT DISTINCT TO_CHAR(A.SIDB_DOC_BE + LEVEL - 1, 'YYYYMMDD') AS HOLI_DATE
				FROM DUAL
				CONNECT BY LEVEL <= (A.SIDB_DOC_END - A.SIDB_DOC_BE) + 1
				MINUS
				SELECT HOLI_DATE FROM HOLIDAY WHERE HOLI_FLAG = 'Y'
			)	
		) AS HOLIDAY
		FROM SIGN_DOC_BOX A
		INNER JOIN SIGN_CATEGORY B ON A.SICA_CD = B.SICA_CD
		INNER JOIN SIGN_DOC_TEMP C ON A.SIDT_TEMP_CD = C.SIDT_TEMP_CD
		INNER JOIN EMPLOYEE D ON A.EMPL_ID = D.EMPL_ID
		WHERE A.SIDB_DOC_STAT = '3'
		AND B.SICA_CD = 'CC000001' --근태
		AND C.SIDT_TEMP_CD IN ('TC000001', 'TC000002') --TC000001(연차신청서), TC000002(휴가신청서)
		]]>
		<if test="empl_id != null and empl_id != ''">
		AND D.EMPL_ID = #{empl_id}
		</if>
		<if test="sdate != null and sdate != ''">
		<![CDATA[
		AND (TO_CHAR(A.SIDB_DOC_BE, 'YYYY-MM-DD') >= #{sdate} OR TO_CHAR(A.SIDB_DOC_END, 'YYYY-MM-DD') >= #{sdate})
		]]>
		</if>
		<if test="edate != null and edate != ''">
		<![CDATA[
		AND (TO_CHAR(A.SIDB_DOC_BE, 'YYYY-MM-DD') <= #{edate} OR TO_CHAR(A.SIDB_DOC_END, 'YYYY-MM-DD') <= #{edate})
		]]>
		</if>
	</select>

	<select id="selectHoliDayInfo" parameterType="Map" resultType="Integer">
		<![CDATA[
		SELECT 
				COUNT(*)
		FROM	(
			SELECT DISTINCT TO_CHAR(TO_DATE(#{sidb_doc_be}, 'YYYY-MM-DD') + LEVEL - 1, 'YYYYMMDD') AS HOLI_DATE
			FROM DUAL
			CONNECT BY LEVEL <= (TO_DATE(#{sidb_doc_end}, 'YYYY-MM-DD') - TO_DATE(#{sidb_doc_be}, 'YYYY-MM-DD')) + 1
			MINUS
			SELECT HOLI_DATE FROM HOLIDAY WHERE HOLI_FLAG = 'Y'
		)
		]]>
	</select>

	<select id="selectEmpTotalHoliDayInfo" parameterType="String" resultType="Map">
		<![CDATA[
		SELECT 
				SUM(EMHO_HOLIDAY) TOTAL_HOLIDAY,
				SUM(USE_HOLIDAY) USE_HOLIDAY,
				CASE WHEN SUM(REST_HOLIDAY) < 0 THEN 0
				ELSE SUM(REST_HOLIDAY) 
				END REST_HOLIDAY,
				TO_CHAR(HOLI_SDATE, 'YYYY-MM-DD') STANDARD_HOLIDAY
		FROM	(
				-- 총휴가일수
				SELECT
						SUM(A.EMHO_HOLIDAY) EMHO_HOLIDAY,
						NVL(C.USE_HOLIDAY, 0) USE_HOLIDAY,
						A.EMHO_HOLIDAY-NVL(C.USE_HOLIDAY, 0) AS REST_HOLIDAY,
						HOLI_SDATE
				FROM		(
				            SELECT EMPL_ID, EMHO_YEAR, EMHO_HOLIDAY
				            FROM EMP_HOLIDAY
				            WHERE (EMPL_ID, EMHO_YEAR) IN (
				                  SELECT EMPL_ID, MAX(EMHO_YEAR) EMHO_YEAR
				                  FROM EMP_HOLIDAY
				                  GROUP BY EMPL_ID
				            	  )
				            ) A 
				INNER JOIN EMPLOYEE B ON A.EMPL_ID = B.EMPL_ID
				LEFT OUTER JOIN (
							-- 휴가 사용일
							SELECT 
										EMPL_ID,
										COUNT(HOLI_DATE) USE_HOLIDAY,
										HOLI_SDATE
							FROM		(
										SELECT 		DISTINCT
													A.EMPL_ID,
													CASE WHEN HOLI_SDATE > A.SIDB_DOC_BE THEN TO_CHAR(HOLI_SDATE + LEVEL - 1, 'YYYYMMDD')
														 ELSE TO_CHAR(A.SIDB_DOC_BE + LEVEL - 1, 'YYYYMMDD') 
														 END AS HOLI_DATE,
													HOLI_SDATE
										FROM		(
													SELECT
															EMPL_ID,
															SIDB_DOC_BE,
															SIDB_DOC_END
													FROM	SIGN_DOC_BOX
													WHERE	SIDB_DOC_STAT = '3'
										            AND		SICA_CD = 'CC000001'
										            AND		SIDT_TEMP_CD IN ('TC000001', 'TC000002')
													) A
										INNER JOIN 	(
										            SELECT A.EMPL_ID, A.EMHO_YEAR, A.EMHO_HOLIDAY, TO_DATE(A.EMHO_YEAR || TO_CHAR(TO_DATE(B.EMPL_JOINDATE, 'YYYY-MM-DD'), '-MM-DD'), 'YYYY-MM-DD') AS HOLI_SDATE
										            FROM EMP_HOLIDAY A
										            INNER JOIN EMPLOYEE B ON A.EMPL_ID = B.EMPL_ID
										            WHERE (A.EMPL_ID, A.EMHO_YEAR) IN (
										                  SELECT EMPL_ID, MAX(EMHO_YEAR) EMHO_YEAR
										                  FROM EMP_HOLIDAY
										                  GROUP BY EMPL_ID
										            	  )
													) D ON A.EMPL_ID = D.EMPL_ID
										CONNECT BY LEVEL <= (A.SIDB_DOC_END - CASE WHEN HOLI_SDATE > A.SIDB_DOC_BE THEN HOLI_SDATE ELSE A.SIDB_DOC_BE END) + 1
										) T
							WHERE 		T.HOLI_DATE NOT IN (
										SELECT HOLI_DATE FROM HOLIDAY WHERE HOLI_FLAG = 'Y'
										)
							GROUP BY EMPL_ID, HOLI_SDATE
							) C ON A.EMPL_ID = C.EMPL_ID
				WHERE 	A.EMPL_ID = #{empl_id}
				GROUP BY A.EMHO_HOLIDAY, C.USE_HOLIDAY, HOLI_SDATE
		 		)
		GROUP BY HOLI_SDATE
		]]>
	</select>

	<select id="selectEmpTotalHoliDayInfoAdmin" parameterType="Map" resultType="HolidayAdminDto">
		<![CDATA[
		SELECT
				B.EMPL_ID,
				B.EMPL_NAME,
				C.COCO_NAME AS EMPL_DEPT_NM,
				D.COCO_NAME AS EMPL_RANK_NM,
				E.COCO_NAME AS EMPL_POSITION_NM,
				TOTAL_HOLIDAY,
				USE_HOLIDAY,
				REST_HOLIDAY,
				STANDARD_HOLIDAY
		FROM	(
				SELECT 
						EMPL_ID,
						SUM(EMHO_HOLIDAY) TOTAL_HOLIDAY,
						SUM(USE_HOLIDAY) USE_HOLIDAY,
						CASE WHEN SUM(REST_HOLIDAY) < 0 THEN 0
						ELSE SUM(REST_HOLIDAY) 
						END REST_HOLIDAY,
						TO_CHAR(HOLI_SDATE, 'YYYY-MM-DD') AS STANDARD_HOLIDAY,
						HOLI_SDATE
				FROM	(
						-- 총휴가일수
						SELECT
								A.EMPL_ID,
								SUM(A.EMHO_HOLIDAY) EMHO_HOLIDAY,
								NVL(C.USE_HOLIDAY, 0) USE_HOLIDAY,
								A.EMHO_HOLIDAY-NVL(C.USE_HOLIDAY, 0) AS REST_HOLIDAY,
								TO_DATE(A.EMHO_YEAR || TO_CHAR(TO_DATE(B.EMPL_JOINDATE, 'YYYY-MM-DD'), '-MM-DD'), 'YYYY-MM-DD') AS HOLI_SDATE
						FROM		(
						            SELECT EMPL_ID, EMHO_YEAR, EMHO_HOLIDAY
						            FROM EMP_HOLIDAY
						            WHERE (EMPL_ID, EMHO_YEAR) IN (
						                  SELECT EMPL_ID, MAX(EMHO_YEAR) EMHO_YEAR
						                  FROM EMP_HOLIDAY
						                  GROUP BY EMPL_ID
						            	  )
						            ) A 
						INNER JOIN EMPLOYEE B ON A.EMPL_ID = B.EMPL_ID
						LEFT OUTER JOIN (
									-- 휴가 사용일
									SELECT 
												EMPL_ID,
												COUNT(HOLI_DATE) USE_HOLIDAY,
												HOLI_SDATE
									FROM		(
												SELECT 		DISTINCT
															A.EMPL_ID,
															CASE WHEN HOLI_SDATE > A.SIDB_DOC_BE THEN TO_CHAR(HOLI_SDATE + LEVEL - 1, 'YYYYMMDD')
																 ELSE TO_CHAR(A.SIDB_DOC_BE + LEVEL - 1, 'YYYYMMDD') 
																 END AS HOLI_DATE,
															HOLI_SDATE
												FROM		(
															SELECT
																	EMPL_ID,
																	SIDB_DOC_BE,
																	SIDB_DOC_END
															FROM	SIGN_DOC_BOX
															WHERE	SIDB_DOC_STAT = '3'
												            AND		SICA_CD = 'CC000001'
												            AND		SIDT_TEMP_CD IN ('TC000001', 'TC000002')
															) A
												INNER JOIN 	(
												            SELECT A.EMPL_ID, A.EMHO_YEAR, A.EMHO_HOLIDAY, TO_DATE(A.EMHO_YEAR || TO_CHAR(TO_DATE(B.EMPL_JOINDATE, 'YYYY-MM-DD'), '-MM-DD'), 'YYYY-MM-DD') AS HOLI_SDATE
												            FROM EMP_HOLIDAY A
												            INNER JOIN EMPLOYEE B ON A.EMPL_ID = B.EMPL_ID
												            WHERE (A.EMPL_ID, A.EMHO_YEAR) IN (
												                  SELECT EMPL_ID, MAX(EMHO_YEAR) EMHO_YEAR
												                  FROM EMP_HOLIDAY
												                  GROUP BY EMPL_ID
												            	  )
															) D ON A.EMPL_ID = D.EMPL_ID
												CONNECT BY LEVEL <= (A.SIDB_DOC_END - CASE WHEN HOLI_SDATE > A.SIDB_DOC_BE THEN HOLI_SDATE ELSE A.SIDB_DOC_BE END) + 1
												) T
									WHERE 		T.HOLI_DATE NOT IN (
												SELECT HOLI_DATE FROM HOLIDAY WHERE HOLI_FLAG = 'Y'
												)
									GROUP BY EMPL_ID, HOLI_SDATE
									) C ON A.EMPL_ID = C.EMPL_ID
						GROUP BY A.EMPL_ID, A.EMHO_YEAR, A.EMHO_HOLIDAY, C.USE_HOLIDAY, HOLI_SDATE, B.EMPL_JOINDATE
				 		)
				GROUP BY EMPL_ID, HOLI_SDATE
		) A
		INNER JOIN EMPLOYEE B ON A.EMPL_ID = B.EMPL_ID
		INNER JOIN COMMON_CODE C ON B.EMPL_DEPT_CD = C.COCO_CD
		INNER JOIN COMMON_CODE D ON B.EMPL_RANK_CD = D.COCO_CD
		LEFT JOIN COMMON_CODE E ON B.EMPL_POSITION_CD = E.COCO_CD
		WHERE 1=1
		]]>
		<if test="keyWord != null and keyWord != ''">
		AND ${searchType} LIKE CONCAT(#{keyWord}, '%')
		</if>
		<if test="empl_delflag != null and empl_delflag != ''">
		AND B.EMPL_DELFLAG = #{empl_delflag}
		</if>
		
		<if test="empl_dept_cd != null and empl_dept_cd != ''">
		    AND B.EMPL_DEPT_CD IN 
		    <foreach collection="empl_dept_cd" item="dcode" open="(" separator="," close=")">
		        #{dcode}
		    </foreach>
		</if>
		<if test="empl_rank_cd != null and empl_rank_cd != ''">
			AND B.EMPL_RANK_CD IN
			<foreach collection="empl_rank_cd" item="rcode" open="(" separator="," close=")">
				#{rcode}
			</foreach>
		</if>
		<if test="empl_position_cd != null and empl_position_cd != ''">
			AND B.EMPL_POSITION_CD IN
			<foreach collection="empl_position_cd" item="pcode" open="(" separator="," close=")">
				#{pcode}
			</foreach>
		</if>		
		<![CDATA[
		ORDER BY B.EMPL_ID ASC
		]]>
	</select>

</mapper>
